import { GenericQuery, GenericMutation } from "convex/server";
import { DataModel } from "./dataModel";

/**
 * Generated API types for Convex functions
 * This file is automatically generated by Convex
 */
export type Api = {
  tasks: {
    getTasks: GenericQuery<DataModel, "tasks", { userId: string }, any[]>;
    getTasksByStatus: GenericQuery<DataModel, "tasks", { userId: string; completed: boolean }, any[]>;
    getTasksByPriority: GenericQuery<DataModel, "tasks", { userId: string; priority: "low" | "medium" | "high" }, any[]>;
    createTask: GenericMutation<DataModel, "tasks", {
      title: string;
      description?: string;
      priority: "low" | "medium" | "high";
      dueDate?: string;
      userId: string;
    }, any>;
    updateTask: GenericMutation<DataModel, "tasks", {
      id: any;
      title?: string;
      description?: string;
      completed?: boolean;
      priority?: "low" | "medium" | "high";
      dueDate?: string;
    }, void>;
    deleteTask: GenericMutation<DataModel, "tasks", { id: any }, void>;
    toggleTask: GenericMutation<DataModel, "tasks", { id: any }, void>;
  };
};

export const api: Api = {
  tasks: {
    getTasks: "tasks:getTasks" as any,
    getTasksByStatus: "tasks:getTasksByStatus" as any,
    getTasksByPriority: "tasks:getTasksByPriority" as any,
    createTask: "tasks:createTask" as any,
    updateTask: "tasks:updateTask" as any,
    deleteTask: "tasks:deleteTask" as any,
    toggleTask: "tasks:toggleTask" as any,
  },
};


